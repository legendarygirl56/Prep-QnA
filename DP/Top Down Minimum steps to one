//Minimum steps to one
//convert n to 1 using either n=n/3 if n%3==0 or n=n/2 if n%2==0 or n=n-1 in O(n) complexity
#include<bits/stdc++.h>
using namespace std;

int minstep(int n,int dp[])
{
	if(n==1)
	{
		return 0;
	}
	if(dp[n]!=0)
	{
		return dp[n];
	}
	int op1,op2,op3;//three options
	op1=op2=op3=INT_MAX;
	if(n%3==0)
	{
		op1=minstep(n/3,dp)+1;
	}
	if(n%2==0)
	{
		op2=minstep(n/2,dp)+1;
	}
	op3=minstep(n-1,dp)+1;
	return dp[n]=min(min(op1,op2),op3);
}

int main()
{
	int n;
	cin>>n;
	int dp[100]={0};
	cout<<minstep(n,dp)<<endl;
}
